name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings -A unused-imports

jobs:
  test:
    strategy:
      matrix:
        toolchain: [stable, beta, nightly]
        os: [windows-latest, macos-latest, ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      # - name: Install dependencies
      #   id: install-depencies
      #   uses: ./.github/library/dependency
      #   with:
      #     system: ${{ matrix.os }}
      - run: cargo generate-lockfile
      - name: Cache build outputs
        uses: actions/cache@v3
        with:
          path: |
            target
          key: cache-${{ hashFiles('Cargo.lock') }}-${{ matrix.os }}-${{ matrix.toolchain }}
          restore-keys: |
            cache-${{ hashFiles('Cargo.lock') }}-${{ matrix.os }}-${{ matrix.toolchain }}
            cache-${{ hashFiles('Cargo.lock') }}-${{ matrix.os }}-
            cache-${{ hashFiles('Cargo.lock') }}-
            cache-
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - run: cargo nextest run --retries 3
  test-status:
    runs-on: ubuntu-20.04
    needs: [test]
    if: always()
    steps:
      - name: Successful deploy
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failing deploy
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: olix0r/cargo-action-fmt/setup@v2
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      # - name: Install dependencies
      #   id: install-depencies
      #   uses: ./.github/library/dependency
      #   with:
      #     system: ubuntu-latest
      - run: cargo generate-lockfile
      - name: Cache build outputs
        uses: actions/cache@v3
        with:
          path: |
            ~/target
            ~/**/build/
          key: cache-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cache-${{ hashFiles('Cargo.lock') }}
            cache-
      - run: rustup update nightly
      - run: rustup default nightly
      - run: rustup component add clippy
      - run: cargo check -q --message-format=json | cargo-action-fmt
      - run: cargo clippy -q --message-format=json | cargo-action-fmt
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: rustup update nightly
      - run: rustup default nightly
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
